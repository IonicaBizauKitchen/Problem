<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxQSEhQUDxQUFBQUFBQUDxQUFBQUFBQUFBQWFhQUFBQY
        HCggGBolHBQUITEhJSk3Li4uFx8zODMsNygtLiv/2wBDAQoKCgUFBQ4FBQ4rGRMZKysrKysrKysrKysr
        KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCACxARwDASIAAhEBAxEB/8QA
        GAABAQEBAQAAAAAAAAAAAAAAAgEAAwf/xAAYEAEBAQEBAAAAAAAAAAAAAAAAARECEv/EABQBAQAAAAAA
        AAAAAAAAAAAAAAD/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwDxyszAq4igypIUBsbF
        UGkVsXAbFxsWA0Xy0i2AmNilgJIt5WRgFsXFwB8jeTsQAxlsbAHExcQEGw0sALEWtgImLiUEZqwM2M0B
        FRYCtjYuAsiouAqyNIuAxYki4DYsjYUBsXFxZyCSF5acnIAyJeXXyl5AJyljpieQc7Bx18jeQDEpYlgO
        djYViUBxMKpgBY2LiAg07AsBMRUBmTFwGrIUgLFRYCrEhQFiosBSiclAVpGkKQFkPlpyWA2LIshzkBkX
        C8tgOeJjpY2A5jY6dQLAc7BrrYNgOVGw7BoChWDQSjSTAFCsCglEqgIsStAbViYsAmaEDK0UGKNjYBQo
        MOQCkPmJIcBpCiyFzyDQ4nk5AZrDkW8g5YOO1g2A5dQK73lz65Byo2Olg0HKhXWwOgc6NdAsAamr1EBK
        NJLAASqAKQkwGWIUBYsRYBQokigqoUBYcSHAWOnIR05gFycGGBFIkjrATGJsAUw/KUHLuB069OdBzGx1
        oUHHoK6dBYDnQrp0FAbRpVAEadCgNSlg0EqRakBiglAVYkpg0KJFgLCickBQpBlOUCjpyEpyg6SHIHLp
        z0Cx15DTgHjJKegIU7RtBzsCx10Ogc6HUOh1Qcugrp1XPqgHQWFU0AqFQBqFOoADSo0BrLVgCXIlKCrE
        0tAosSVdBZSlHSlAoYSnKBR15rnDgOvNKVzlKUHWV04rnOi56B0XR9NegLRtb0N6BrQtW9B6AbQ6O9Be
        gcugtPqhQCjaVrnaDWiWpoJQp6NoCNLRtBK0rWpKDLBIChDF0ChQIUAsWJq6BQ5XOEDryccpT5oO3NKO
        XNL0DrpSuXo5QdZVrnKvoC9NrnrWgVc+lvQXoEo2taFBqFa0LQYao9UEoraIMlZLQGotSglTFaUEUSgE
        yMBwglUDWDFA4QRQKU+XPSlB2hSuWlKDrDlcJTnQO0qWhqWg6SpaHpNA+ug1NG0FtG1NDoE6otU0FFbR
        BKyJoMPRUKCNWQE1oiwGrRFgLCBZQJYOrAdJVc9XQOUpQlWAawNWUHSU+enJtB20pXGUpQdfS65a3oD9
        JoXpvQH6S0L0NoFaNqalBbRrWjoLraKWgtFtQG1mo2g1FbRBVFYDNqMC6zMBNqKC1dRAdNWUIQEUCLoF
        q6MYD0tc10D1rR1qBJqIC2prUaBWposCojUG0bVGg2tqVAW0atogyMwM0ZoBVGYFjMwNFZgJqzAsWMwE
        0ZgUuWYGrMwLFZgRmYGTpmAFrMCVKjAlZmBOkrMA1EYGZmBmjMD/2Q==
</value>
  </data>
</root>